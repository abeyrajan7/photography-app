{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Next.js%20Project/my-photography-next-app/src/app/gallery/page.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\r\nimport { fromStatic } from \"@aws-sdk/credential-providers\";\r\n\r\nconst UploadMenu = ({ closeMenu, setLoadedImages }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // Replace with your S3 bucket configuration\r\n  const s3Config = {\r\n    region: \"ap-south-1\",\r\n    bucketName: \"framefinder-photography-abey\",\r\n    accessKeyId: process.env.NEXT_PUBLIC_AWS_ACCESS_KEY_ID,\r\n    secretAccessKey: process.env.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY,\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const allowedTypes = [\"image/jpeg\", \"image/png\"];\r\n      if (allowedTypes.includes(file.type)) {\r\n        setSelectedFile(file);\r\n      } else {\r\n        alert(\"Only JPG and PNG files are allowed.\");\r\n        event.target.value = \"\"; // Clear the file input\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert(\"Please choose a file before uploading.\");\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    // Initialize S3 Client\r\n    const s3Client = new S3Client({\r\n      region: s3Config.region,\r\n      credentials: fromStatic({\r\n        accessKeyId: s3Config.accessKeyId,\r\n        secretAccessKey: s3Config.secretAccessKey,\r\n      }),\r\n    });\r\n\r\n    // Prepare the upload command\r\n    const uploadParams = {\r\n      Bucket: s3Config.bucketName,\r\n      Key: `photos/${selectedFile.name}`, // File name in the S3 bucket\r\n      Body: selectedFile, // File content\r\n      ContentType: selectedFile.type, // MIME type\r\n    };\r\n\r\n    try {\r\n      // Upload the file\r\n      const command = new PutObjectCommand(uploadParams);\r\n      await s3Client.send(command);\r\n\r\n      // Re-fetch the images after a successful upload\r\n      const response = await fetch(\"http://localhost:3001/api/images\");\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch images: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n      setLoadedImages(data.data); // Update the state with the fetched images\r\n\r\n      alert(\"File uploaded successfully!\");\r\n      closeMenu(); // Automatically close the upload menu\r\n    } catch (error) {\r\n      console.error(\"Error uploading file or fetching images:\", error);\r\n      alert(\"Failed to upload file. Please try again.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <label\r\n          htmlFor=\"file-input\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            color: \"#007BFF\",\r\n            textDecoration: \"underline\",\r\n          }}\r\n        >\r\n          Choose File\r\n        </label>\r\n        <input\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          accept=\".jpg,.png\"\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileChange}\r\n        />\r\n      </div>\r\n      <div>{selectedFile && <p>Selected File: {selectedFile.name}</p>}</div>\r\n      <button\r\n        onClick={handleUpload}\r\n        style={{ marginRight: \"10px\" }}\r\n        disabled={uploading}\r\n      >\r\n        {uploading ? \"Uploading...\" : \"Upload\"}\r\n      </button>\r\n      <button onClick={closeMenu}>Close</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadMenu;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;;;AAGA,MAAM,aAAa,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,4CAA4C;IAC5C,MAAM,WAAW;QACf,QAAQ;QACR,YAAY;QACZ,aAAa,QAAQ,GAAG,CAAC,6BAA6B;QACtD,iBAAiB,QAAQ,GAAG,CAAC,iCAAiC;IAChE;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;QAClC,IAAI,MAAM;YACR,MAAM,eAAe;gBAAC;gBAAc;aAAY;YAChD,IAAI,aAAa,QAAQ,CAAC,KAAK,IAAI,GAAG;gBACpC,gBAAgB;YAClB,OAAO;gBACL,MAAM;gBACN,MAAM,MAAM,CAAC,KAAK,GAAG,IAAI,uBAAuB;YAClD;QACF;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,cAAc;YACjB,MAAM;YACN;QACF;QAEA,aAAa;QAEb,uBAAuB;QACvB,MAAM,WAAW,IAAI,iJAAA,CAAA,WAAQ,CAAC;YAC5B,QAAQ,SAAS,MAAM;YACvB,aAAa,WAAW;gBACtB,aAAa,SAAS,WAAW;gBACjC,iBAAiB,SAAS,eAAe;YAC3C;QACF;QAEA,6BAA6B;QAC7B,MAAM,eAAe;YACnB,QAAQ,SAAS,UAAU;YAC3B,KAAK,CAAC,OAAO,EAAE,aAAa,IAAI,EAAE;YAClC,MAAM;YACN,aAAa,aAAa,IAAI;QAChC;QAEA,IAAI;YACF,kBAAkB;YAClB,MAAM,UAAU,IAAI,iJAAA,CAAA,mBAAgB,CAAC;YACrC,MAAM,SAAS,IAAI,CAAC;YAEpB,gDAAgD;YAChD,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,UAAU,EAAE;YAClE;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,gBAAgB,KAAK,IAAI,GAAG,2CAA2C;YAEvE,MAAM;YACN,aAAa,sCAAsC;QACrD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4CAA4C;YAC1D,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,OAAO;oBAAE,cAAc;gBAAO;;kCACjC,8OAAC;wBACC,SAAQ;wBACR,OAAO;4BACL,QAAQ;4BACR,OAAO;4BACP,gBAAgB;wBAClB;kCACD;;;;;;kCAGD,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,QAAO;wBACP,OAAO;4BAAE,SAAS;wBAAO;wBACzB,UAAU;;;;;;;;;;;;0BAGd,8OAAC;0BAAK,8BAAgB,8OAAC;;wBAAE;wBAAgB,aAAa,IAAI;;;;;;;;;;;;0BAC1D,8OAAC;gBACC,SAAS;gBACT,OAAO;oBAAE,aAAa;gBAAO;gBAC7B,UAAU;0BAET,YAAY,iBAAiB;;;;;;0BAEhC,8OAAC;gBAAO,SAAS;0BAAW;;;;;;;;;;;;AAGlC;uCAEe"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Next.js%20Project/my-photography-next-app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,iTAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}